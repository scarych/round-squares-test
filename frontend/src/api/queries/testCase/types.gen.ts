// This file is auto-generated by @hey-api/openapi-ts

export type LoginDto = {
    /**
     * Логин
     */
    login: string;
};

export type LoginExistsResponseDto = {
    /**
     * Логин уже существует
     */
    exists: boolean;
};

export type LoginPasswordDto = {
    /**
     * Логин
     */
    login: string;
    /**
     * Пароль
     */
    password: string;
};

export type AuthTokenResponseDto = {
    /**
     * Токен
     */
    token: string;
};

export type HttpExceptionResponse = {
    /**
     * Код ошибки
     */
    statusCode: number;
    /**
     * Сообшение об ошибке
     */
    message: string;
    /**
     * Название ошибки
     */
    error: string;
};

export type Games = {
    id: string;
    createdAt: string;
    updatedAt: string;
    startingAt: string;
    finishingAt: string;
};

export type GamesSettingsDto = {
    /**
     * Название комнаты для подписки
     */
    socketRoomName: string;
    /**
     * Ожидание
     */
    cooldown: number;
};

export type BooleanValueResponseDto = {
    /**
     * Значение
     */
    value: boolean;
};

export type GameStatsDto = {
    /**
     * ID пользователя
     */
    userId: string;
    /**
     * Логин пользователя
     */
    login: string;
    /**
     * Всего очков
     */
    totalPoints: number;
};

export type GameInfoDto = {
    /**
     * Информация об игре
     */
    game: Games;
    /**
     * Статистика
     */
    topStats: GameStatsDto | null;
    /**
     * Статистика
     */
    myStats: GameStatsDto | null;
};

export type UserInfoResponseDto = {
    /**
     * Логин
     */
    login: string;
};

export type AppControllerIndexData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type AppControllerIndexResponses = {
    200: unknown;
};

export type AuthControllerCheckLoginData = {
    body: LoginDto;
    path?: never;
    query?: never;
    url: '/auth/checkLogin';
};

export type AuthControllerCheckLoginResponses = {
    200: LoginExistsResponseDto;
};

export type AuthControllerCheckLoginResponse = AuthControllerCheckLoginResponses[keyof AuthControllerCheckLoginResponses];

export type AuthControllerRegisterData = {
    body: LoginPasswordDto;
    path?: never;
    query?: never;
    url: '/auth/register';
};

export type AuthControllerRegisterErrors = {
    409: HttpExceptionResponse;
};

export type AuthControllerRegisterError = AuthControllerRegisterErrors[keyof AuthControllerRegisterErrors];

export type AuthControllerRegisterResponses = {
    200: AuthTokenResponseDto;
};

export type AuthControllerRegisterResponse = AuthControllerRegisterResponses[keyof AuthControllerRegisterResponses];

export type AuthControllerLoginData = {
    body: LoginPasswordDto;
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type AuthControllerLoginErrors = {
    409: HttpExceptionResponse;
};

export type AuthControllerLoginError = AuthControllerLoginErrors[keyof AuthControllerLoginErrors];

export type AuthControllerLoginResponses = {
    200: AuthTokenResponseDto;
};

export type AuthControllerLoginResponse = AuthControllerLoginResponses[keyof AuthControllerLoginResponses];

export type GamesControllerGamesListData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/games';
};

export type GamesControllerGamesListErrors = {
    401: HttpExceptionResponse;
};

export type GamesControllerGamesListError = GamesControllerGamesListErrors[keyof GamesControllerGamesListErrors];

export type GamesControllerGamesListResponses = {
    200: Array<Games>;
};

export type GamesControllerGamesListResponse = GamesControllerGamesListResponses[keyof GamesControllerGamesListResponses];

export type GamesControllerSettingsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/games/settings';
};

export type GamesControllerSettingsErrors = {
    401: HttpExceptionResponse;
};

export type GamesControllerSettingsError = GamesControllerSettingsErrors[keyof GamesControllerSettingsErrors];

export type GamesControllerSettingsResponses = {
    200: GamesSettingsDto;
};

export type GamesControllerSettingsResponse = GamesControllerSettingsResponses[keyof GamesControllerSettingsResponses];

export type GamesControllerCreateIsAllowedData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/games/create';
};

export type GamesControllerCreateIsAllowedErrors = {
    401: HttpExceptionResponse;
    403: HttpExceptionResponse;
};

export type GamesControllerCreateIsAllowedError = GamesControllerCreateIsAllowedErrors[keyof GamesControllerCreateIsAllowedErrors];

export type GamesControllerCreateIsAllowedResponses = {
    200: BooleanValueResponseDto;
};

export type GamesControllerCreateIsAllowedResponse = GamesControllerCreateIsAllowedResponses[keyof GamesControllerCreateIsAllowedResponses];

export type GamesControllerCreateGameData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/games/create';
};

export type GamesControllerCreateGameErrors = {
    401: HttpExceptionResponse;
};

export type GamesControllerCreateGameError = GamesControllerCreateGameErrors[keyof GamesControllerCreateGameErrors];

export type GamesControllerCreateGameResponses = {
    200: Games;
};

export type GamesControllerCreateGameResponse = GamesControllerCreateGameResponses[keyof GamesControllerCreateGameResponses];

export type GamesControllerGetGameByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/games/{id}';
};

export type GamesControllerGetGameByIdErrors = {
    401: HttpExceptionResponse;
    404: HttpExceptionResponse;
};

export type GamesControllerGetGameByIdError = GamesControllerGetGameByIdErrors[keyof GamesControllerGetGameByIdErrors];

export type GamesControllerGetGameByIdResponses = {
    200: GameInfoDto;
};

export type GamesControllerGetGameByIdResponse = GamesControllerGetGameByIdResponses[keyof GamesControllerGetGameByIdResponses];

export type GamesControllerPointGameData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/games/{id}';
};

export type GamesControllerPointGameErrors = {
    401: HttpExceptionResponse;
    404: HttpExceptionResponse;
    409: HttpExceptionResponse;
};

export type GamesControllerPointGameError = GamesControllerPointGameErrors[keyof GamesControllerPointGameErrors];

export type GamesControllerPointGameResponses = {
    200: GameStatsDto;
};

export type GamesControllerPointGameResponse = GamesControllerPointGameResponses[keyof GamesControllerPointGameResponses];

export type UsersControllerInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/info';
};

export type UsersControllerInfoErrors = {
    401: HttpExceptionResponse;
};

export type UsersControllerInfoError = UsersControllerInfoErrors[keyof UsersControllerInfoErrors];

export type UsersControllerInfoResponses = {
    200: UserInfoResponseDto;
};

export type UsersControllerInfoResponse = UsersControllerInfoResponses[keyof UsersControllerInfoResponses];

export type ClientOptions = {
    baseUrl: string;
};